# -*- coding: utf-8 -*-

import os
import pandas as pd
import baggyw
import whetlab
from math import log, exp
import sys
import re

sys.path.append("/home2/yannick2/github/xgboost/wrapper")

import xgboost as xgb

rootdir = ".."
print os.path.join(rootdir, 'data', 'labeledTrainData.tsv')
train = pd.read_csv(os.path.join(rootdir, 'data', 'labeledTrainData.tsv'), header=0, \
                    delimiter="\t", quoting=3)
test = pd.read_csv(os.path.join(rootdir, 'data', 'testData.tsv'), header=0, delimiter="\t", \
                   quoting=3 )

(train_data_features, vectorizer) = baggyw.reviews_to_features(train)
print train_data_features.shape


X = train_data_features
y = train["sentiment"].values

dtrain = xgb.DMatrix(X, label=y)

watchlist  = [(dtrain,'train')]

param_grid = \
    	{'max_depth' : {'min': 1, 'max': 20, 'type': 'integer'},
      'subsample' : {'min': 0.3, 'max': 1.0, 'type': 'float'},
      'eta' : {'min': log(0.003), 'max': log(10), 'type': 'float'}}



scientist = whetlab.Experiment(name = "Bag of words xgbcv-2",
                               description = "",
                               parameters = param_grid,
                               outcome = {"name" : "ROCAUC"})

n_iter = 100
num_round = 200

p = re.compile("[a-z-]*:(0\.[0-9]*)")

for i in range(n_iter):
    job = scientist.suggest()
    param = {'objective': 'binary:logistic', 'nthreads': 8, 'silent': 1, 'eval_metric': 'auc'}
    param.update(job)
    param['eta'] = exp(param['eta'])
    result = xgb.cv(param, dtrain, num_round, nfold=5,
                      metrics={'auc'}, seed = 0)
    auc = float(p.match(result[-1][7:]).group(1))

    scientist.update(job, auc)
 
 